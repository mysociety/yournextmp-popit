# Is this a staging or development server? Set STAGING to 1 if so,
# otherwise set 0 for a production site
STAGING: '1'

# This can be either 'postgresql' or 'sqlite':
DATABASE_SYSTEM: 'sqlite'

# These settings are for when you've set 'postgresql' as the
# DATABASE_SYSTEM above, otherwise (if you're using 'sqlite')
# they're ignored.
YNMP_DB_USER: ''
YNMP_DB_NAME: ''
YNMP_DB_PASS: ''
YNMP_DB_PORT: ''
YNMP_DB_HOST: ''

# The path to the gems directory:
GEMS_DIRECTORY: ''

# The PopIt instance login details
POPIT_INSTANCE: yournextmp
POPIT_HOSTNAME: popit.mysociety.org

# If you're using the new-style PopIt login, where you generate an API
# then set POPIT_API_KEY and leave POPIT_USER and POPIT_PASSWORD blank.
POPIT_API_KEY: 'f093903b7a1aa9688b36241502beadc7'

# Conversely, if you're using the old-style login, where you have a
# single username and password for the instance, set POPIT_USER and
# POPIT_PASSWORD but make POPIT_API_KEY blank.
POPIT_USER: someone@example.org
POPIT_PASSWORD: popitinstancepassword

# SECRET_KEY should be a random string of characters
SECRET_KEY: '098nadkafy123asidftqaer0aoejfoasdfa'

# For a public server, you should restrict this to the hostnames
# that the site will actually be hosted at.
ALLOWED_HOSTS:
  - '*'

# The email addresses that error emails will be sent to, e.g.:
# ADMINS:
#   - ['Example User A', 'alice@example.org']
#   - ['Example User B', 'bob@example.org']
ADMINS: []

# The From: address for error emails
SERVER_EMAIL: root@localhost

# The From: address for all emails except error emails
DEFAULT_FROM_EMAIL: webmaster@localhost

# You can use Google analytics by changing this to your Google
# analytics tracking ID:
GOOGLE_ANALYTICS_ACCOUNT: ''

# If you set this to true then the protocol of image URLs will be set
# rewritten from http to https.
FORCE_HTTPS_IMAGES: false

# Set this to true if you're running the site behind nginx for SSL
# termination; this will cause the SECURE_PROXY_SSL_HEADER Django
# setting to be set to ('HTTP_X_FORWARDED_PROTO', 'https') and tell
# django-allauth to generate https URLs.
NGINX_SSL: false

# If you set this to true then the protocol of image URLs will be set
# rewritten from http to https.
FORCE_HTTPS_IMAGES: false
